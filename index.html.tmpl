<html>
<head>
  <link rel="icon" type="image/png" href="icon.png">
  <style>
    table {
      border-collapse: collapse;
      width: 100%;
      table-layout: fixed;
    }
    table, th, td {
      border: 1px solid lightgray;
    }
    th, td {
      height: 2rem;
      padding: 0 0.5rem;
      white-space: nowrap;
      overflow: scroll;
    }
    th {
      background-color: beige;
    }
    #page_controls > button {
      margin: 1rem;
      padding: 0.5rem 1.5rem;
    }
  </style>
  <script>
    window.data = {{data}}
    window.pageIndex = 0
    window.pageSize = 20
    window.food_categories = {
      '1': 'Dairy & Eggs',
      '2': 'Herbs',
      '9': 'Fruits',
      '11': 'Veggies',
      '12': 'Seeds',
      '15': 'Fish',
      '16': 'Legumes',
      '20': 'Grains'
    }

    function configureDenominatorSelector() {
      const denominator_selector = document.getElementById("denominator_selector")
      for (let denominator of ['100 g', '100 kcal', '1 g fat']) {
        let option = document.createElement("option")
        option.value = denominator
        option.innerText = denominator
        denominator_selector.appendChild(option)
      }

      denominator_selector.addEventListener("change", event => {
        window.pageIndex = 0
        rerender()
      })
    }

    function configureNutrientSelector() {
      const nutrient_selector = document.getElementById("nutrient_selector")
      const nutrient_ids = new Set()
      const nutrients = []
      for (let row of window.data) {
        const id = row[2]
        if (nutrient_ids.has(id)) continue
        nutrient_ids.add(id)
        nutrients.push({ id, name: row[3] })
      }
      nutrients.sort((a, b) => a.name.localeCompare(b.name))

      for (let nutrient of nutrients) {
        let option = document.createElement("option")
        option.value = nutrient.id
        option.innerText = nutrient.name
        nutrient_selector.appendChild(option)
      }

      nutrient_selector.addEventListener("change", event => {
        window.pageIndex = 0
        rerender()
      })
    }

    function configureCategoriesSelector() {
      const categories_selector = document.getElementById("categories_selector")
      const category_ids = new Set()
      const categories = []
      for (let row of window.data) {
        const id = row[1]
        if (category_ids.has(id)) continue
        category_ids.add(id)
        categories.push({ id, name: window.food_categories[id]})
      }

      for (let category of categories) {
        let label = document.createElement("label")

        let input = document.createElement("input")
        input.checked = true
        input.type = "checkbox"
        input.id = category.id
        input.addEventListener("change", event => {
          window.pageIndex = 0
          rerender()
        })
        label.appendChild(input)

        let text = document.createTextNode(category.name)
        label.appendChild(text)

        categories_selector.appendChild(label)
      }
    }

    function configureDataTable() {
      const food_categories = document.getElementById("categories_selector")
      const selectors = food_categories.getElementsByTagName("input")
      let desired_categories = []
      for (let selector of selectors) {
        if (selector.checked) {
          desired_categories.push(selector.id)
        }
      }

      const nutrient = document.getElementById("nutrient_selector").value
      const denominator = document.getElementById("denominator_selector").value

      const data_table = document.getElementById("data_table")

      // Remove all rows except for the heading
      for (let tbody of data_table.tBodies) {
        data_table.removeChild(tbody)
      }
      let tbody = data_table.createTBody()

      const filteredData = window.data.filter(row => {
        return desired_categories.includes(row[1]) && row[2] === nutrient
      })

      if (denominator === '100 kcal') {
        filteredData.sort((a, b) => {
          return parseFloat(b[6]) - parseFloat(a[6])
        })
      } else if (denominator === '1 g fat') {
        filteredData.sort((a, b) => {
          return parseFloat(b[7]) - parseFloat(a[7])
        })
      } else if (denominator === '100 g') {
        filteredData.sort((a, b) => {
          return parseFloat(b[5]) - parseFloat(a[5])
        })
      }

      const num_pages = filteredData.length % window.pageSize == 0 ?
        filteredData.length / window.pageSize :
        (Math.floor(filteredData.length / window.pageSize) + 1)

      for (let [j, row] of filteredData.entries()) {
        if (j < pageIndex * window.pageSize) continue;
        if (j === (pageIndex + 1) * window.pageSize) break;

        let tr = document.createElement("tr")
        for (let [i, col] of row.entries()) {
          if ([1, 2, 4, 6, 7].includes(i)) continue
          let td = document.createElement("td")
          if (i === 3) {
            td.innerText = `${col} (${row[i+1].toLowerCase()})`
          } else if (i === 5) {
            if (denominator === '100 g') {
              td.innerText = col
            } else if (denominator === '100 kcal') {
              td.innerText = row[i + 1]
            } else if (denominator === '1 g fat') {
              td.innerText = row[i + 2]
            }
          } else {
            td.innerText = col
          }
          tr.appendChild(td)

          if (i == 5) {
            td.style.textAlign = 'right'
          }
        }
        tbody.appendChild(tr)
      }

      return num_pages
    }

    function rerender() {
      const num_pages = configureDataTable()

      let pageNumber = document.getElementById("page_number")
      pageNumber.innerText = `${window.pageIndex + 1} / ${num_pages}`
    }

    function configurePagination() {
      let prevBtn = document.getElementById("prev_page")
      prevBtn.addEventListener("click", event => {
        window.pageIndex--
        if (window.pageIndex === 0) {
          prevBtn.disabled = true
        }
        rerender()
      })

      let nextBtn = document.getElementById("next_page")
      nextBtn.addEventListener("click", event => {
        if (window.pageIndex === 0) {
          let prevBtn = document.getElementById("prev_page")
          prevBtn.disabled = false
        }
        window.pageIndex++
        rerender()
      })
    }

    window.addEventListener('load', event => {
      configureCategoriesSelector()
      configureNutrientSelector()
      configureDenominatorSelector()
      configurePagination()
      rerender()
    })

  </script>
</head>
<body>
  <div id="categories_selector"
       style="padding: 1rem 0; display: flex; justify-content: space-between;">
    <strong>Categories:</strong>
  </div>
  <div style="padding: 1rem 0; display: flex;">
    <div style="flex: 4;">
      <strong>Nutrient:</strong>
      <select id="nutrient_selector"
              style="padding: 0.5rem; border: none; outline: none;"></select>
    </div>
    <div style="flex: 8;">
      <strong>Per:</strong>
      <select id="denominator_selector"
              style="padding: 0.5rem; border: none; outline: none;"></select>
    </div>
  </div>
  <table id="data_table">
    <thead>
      <tr>
        <th>Food</th>
        <th>Nutrient</th>
        <th>Amount</th>
      </tr>
    </thead>
  </table>
  <div id="page_controls"
       style="display: flex; justify-content: flex-end; align-items: baseline;">
    <button disabled id="prev_page">Prev</button>
    <div id="page_number">1</div>
    <button id="next_page">Next</button>
  </div>
</body>
</html>
